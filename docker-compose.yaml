version: '3.8'

services:
  cut-roll-movies:
    image: makedoniaz/cut-roll-movies:latest
    build:
      context: .
      dockerfile: app.Dockerfile
    container_name: movies_container
    environment:
      ASPNETCORE_URLS: http://+:80 
      POSTGRES_CONNECTION_STRING: "Host=${POSTGRES_HOST};Port=${POSTGRES_PORT};Username=${POSTGRES_USER};Password=${POSTGRES_PASSWORD};Database=${POSTGRES_DB};Pooling=true;"
      JWT_KEY: "${JWT_KEY}"
      JWT_LIFE_TIME_IN_MINUTES: "${JWT_LIFE_TIME_IN_MINUTES}"
      JWT_ISSUER: "${JWT_ISSUER}"
      JWT_AUDIENCE: "${JWT_AUDIENCE}"
      RABBIT_MQ_HOSTNAME: "${RABBIT_MQ_HOSTNAME}"
      RABBIT_MQ_USERNAME: "${RABBIT_MQ_USERNAME}"
      RABBIT_MQ_PASSWORD: "${RABBIT_MQ_PASSWORD}"
      
    ports:
      - 5002:80
    volumes:
      - ./Data/SqlScripts:/app/SqlScripts
    depends_on:
      - postgres
    networks:
      - microservices-network
    restart: always

  
  postgres:
    image: postgres:latest
    container_name: movies_db_container
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    expose:
      - ${POSTGRES_PORT}
    ports:
      - "${POSTGRES_PORT}:${POSTGRES_PORT}"
    networks:
      - microservices-network
    volumes:
      - movies_db_volume:/var/lib/postgresql/data
    restart: always

volumes:
  movies_db_volume:

networks:
  microservices-network:
    external: true

